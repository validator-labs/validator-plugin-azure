---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: azurevalidators.validation.spectrocloud.labs
spec:
  group: validation.spectrocloud.labs
  names:
    kind: AzureValidator
    listKind: AzureValidatorList
    plural: azurevalidators
    singular: azurevalidator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureValidator is the Schema for the azurevalidators API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureValidatorSpec defines the desired state of AzureValidator
            properties:
              auth:
                description: AzureAuth defines authentication configuration for an
                  AzureValidator.
                properties:
                  credentials:
                    description: |-
                      The credentials for the service principal used to authenticate the plugin if not using
                      implicit auth and if secret name was not provided. If secret name was provided, but one or
                      more AZURE_ keys are missing from the secret's data, this field is used for each key missing
                      from the secret data.
                    properties:
                      clientId:
                        description: The client ID associated with the service principal.
                        maxLength: 36
                        minLength: 1
                        type: string
                      clientSecret:
                        description: The client secret associated with the service
                          principal.
                        minLength: 1
                        type: string
                      environment:
                        description: |-
                          The Azure environment to connect to. Can be "AzureCloud" (for the normal public cloud), "AzureUSGovernment", or
                          "AzureChinaCloud". If not provided, the Azure SDK defaults to connecting to the normal public cloud.
                        enum:
                        - AzureCloud
                        - AzureUSGovernment
                        - AzureChinaCloud
                        type: string
                      tenantId:
                        description: The tenant ID associated with the service principal.
                        maxLength: 36
                        minLength: 1
                        type: string
                    required:
                    - clientId
                    - clientSecret
                    - tenantId
                    type: object
                  implicit:
                    description: |-
                      If true, the AzureValidator will use the Azure SDK's default credential chain to authenticate.
                      Set to true if using WorkloadIdentityCredentials. If set to false, the plugin falls back to
                      the SecretName field.
                    type: boolean
                  secretName:
                    description: |-
                      Name of a Secret in the same namespace as the AzureValidator that contains Azure credentials.
                      The secret data's keys and values are expected to align with valid Azure environment variable credentials,
                      per the options defined in https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/azidentity#readme-environment-variables.
                      For each AZURE_ key not found in the secret, the plugin falls back to the Credentials field.
                      If not provided, the plugin falls back to the Credentials field.
                    type: string
                required:
                - implicit
                type: object
              communityGalleryImageRules:
                description: |-
                  Rules for validating that images exist in an Azure Compute Gallery published as a community
                  gallery.
                items:
                  description: |-
                    CommunityGalleryImageRule verifies that one or more images in a community gallery exist and are
                    accessible by a particular subscription.
                  properties:
                    gallery:
                      description: Gallery is the community gallery.
                      properties:
                        location:
                          description: Location is the location of the community gallery
                            (e.g. "westus").
                          type: string
                        name:
                          description: Name is the name of the community gallery.
                          type: string
                      required:
                      - location
                      - name
                      type: object
                    images:
                      description: Images is a list of image names.
                      items:
                        type: string
                      maxItems: 1000
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        RuleName is a unique identifier for the rule in the validator. Used to ensure conditions do
                        not overwrite each other.
                      maxLength: 200
                      type: string
                    subscriptionID:
                      description: SubscriptionID is the ID of the subscription.
                      type: string
                  required:
                  - gallery
                  - images
                  - name
                  - subscriptionID
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: CommunityGalleryImageRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              quotaRules:
                description: |-
                  Rules for validating that current usage falls within current quota limits, including a
                  a buffer.
                items:
                  description: QuotaRule ensures that Azure quotas are within a particular
                    threshold.
                  properties:
                    name:
                      description: |-
                        Unique identifier for the rule in the validator. Used to ensure conditions do not overwrite
                        each other.
                      type: string
                    resourceSets:
                      description: |-
                        The resource sets in the rule, where each set is a scope with one or more resources
                        associated with it.
                      items:
                        description: |-
                          ResourceSet defines a scope that can be used to check current quota and current usage data for
                          one or more resources.
                        properties:
                          resources:
                            description: The resources in the resource set.
                            items:
                              description: |-
                                Resource defines a quota and expected buffer (quota minus usage) for a particular Azure resource
                                name.
                              properties:
                                buffer:
                                  description: |-
                                    The buffer of the resource. The amount that the current usage must be less than the current
                                    by for validation to succeed for the rule. For example, if current quota was 3, current usage
                                    was 2, and the buffer was set to 1, validation would succeed. However, if the buffer was set
                                    to 2 instead of 1, validation would fail.
                                  format: int32
                                  type: integer
                                name:
                                  description: |-
                                    The name of the resource. This is a Microsoft.Quota resource name. Valid values depend on
                                    which scope is used to check the resource. If a name invalid for the configured scope is
                                    used, it will be skipped. For example, the resource names "virtualMachines" and
                                    "standardDFamily" can be used when paired with a scope like "subscriptions/ec9aff0b-8346-4a49-ad2d-d006a12dfbfe/providers/Microsoft.Compute/locations/westus"
                                    because these resource names are used with Microsoft.Compute scopes.
                                  type: string
                              required:
                              - buffer
                              - name
                              type: object
                            type: array
                          scope:
                            description: |-
                              The scope of the resources. Used to determine which type of quota and usage is checked. For
                              example, the scope "subscriptions/ec9aff0b-8346-4a49-ad2d-d006a12dfbfe/providers/Microsoft.Compute/locations/westus"
                              checks info for Compute type quotas and usages in the "westus" location.
                            type: string
                        required:
                        - resources
                        - scope
                        type: object
                      type: array
                  required:
                  - name
                  - resourceSets
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: QuotaRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              rbacRules:
                description: |-
                  Rules for validating that the correct role assignments have been created in Azure RBAC to
                  provide needed permissions.
                items:
                  description: |-
                    RBACRule verifies that a security principal has permissions via role assignments and that no deny
                    assignments deny the permissions.
                  properties:
                    name:
                      description: |-
                        Unique identifier for the rule in the validator. Used to ensure conditions do not overwrite
                        each other.
                      type: string
                    permissionSets:
                      description: |-
                        The permissions that the principal must have. If the principal has permissions less than
                        this, validation will fail. If the principal has permissions equal to or more than this
                        (e.g., inherited permissions from higher level scope, more roles than needed) validation
                        will pass.
                      items:
                        description: |-
                          PermissionSet is part of an RBAC rule and verifies that a security principal has the specified
                          permissions (via role assignments) at the specified scope. Scope can be either subscription,
                          resource group, or resource.
                        properties:
                          actions:
                            description: |-
                              Actions is a list of actions that the role must be able to perform. Must not contain any
                              wildcards. If not specified, the role is assumed to already be able to perform all required
                              actions.
                            items:
                              description: |-
                                ActionStr is a type used for Action strings and DataAction strings. Alias exists to enable
                                kubebuilder max string length validation for arrays of these.
                              maxLength: 200
                              type: string
                            maxItems: 1000
                            type: array
                            x-kubernetes-validations:
                            - message: Actions cannot have wildcards.
                              rule: self.all(item, !item.contains('*'))
                          dataActions:
                            description: |-
                              DataActions is a list of data actions that the role must be able to perform. Must not
                              contain any wildcards. If not provided, the role is assumed to already be able to perform
                              all required data actions.
                            items:
                              description: |-
                                ActionStr is a type used for Action strings and DataAction strings. Alias exists to enable
                                kubebuilder max string length validation for arrays of these.
                              maxLength: 200
                              type: string
                            maxItems: 1000
                            type: array
                            x-kubernetes-validations:
                            - message: DataActions cannot have wildcards.
                              rule: self.all(item, !item.contains('*'))
                          scope:
                            description: |-
                              Scope is the minimum scope of the role. Role assignments found at higher level scopes will
                              satisfy this. For example, a role assignment found with subscription scope will satisfy a
                              permission set where the role scope specified is a resource group within that subscription.
                            type: string
                        required:
                        - scope
                        type: object
                      maxItems: 20
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                      - message: Each permission set must have Actions, DataActions,
                          or both defined
                        rule: self.all(item, size(item.actions) > 0 || size(item.dataActions)
                          > 0)
                    principalId:
                      description: |-
                        The principal being validated. This can be any type of principal - Device, ForeignGroup,
                        Group, ServicePrincipal, or User. If using a service principal, this is the "application
                        object ID". In the Azure portal, this can be found by navigating to Entra ID, selecting the
                        application registration of the service principal, navigating from that page to the managed
                        application page, and copying the "object ID". This ID is different from the tenant ID,
                        client ID, and object ID of the application registration.
                      type: string
                  required:
                  - name
                  - permissionSets
                  - principalId
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: RBACRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
            required:
            - auth
            type: object
          status:
            description: AzureValidatorStatus defines the observed state of AzureValidator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
