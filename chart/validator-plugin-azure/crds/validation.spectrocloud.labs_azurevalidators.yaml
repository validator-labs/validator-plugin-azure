---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: azurevalidators.validation.spectrocloud.labs
spec:
  group: validation.spectrocloud.labs
  names:
    kind: AzureValidator
    listKind: AzureValidatorList
    plural: azurevalidators
    singular: azurevalidator
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureValidator is the Schema for the azurevalidators API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AzureValidatorSpec defines the desired state of AzureValidator
            properties:
              auth:
                description: AzureAuth defines authentication configuration for an
                  AzureValidator.
                properties:
                  implicit:
                    description: |-
                      If true, the AzureValidator will use the Azure SDK's default credential chain to authenticate.
                      Set to true if using WorkloadIdentityCredentials.
                    type: boolean
                  secretName:
                    description: |-
                      Name of a Secret in the same namespace as the AzureValidator that contains Azure credentials.
                      The secret data's keys and values are expected to align with valid Azure environment variable credentials,
                      per the options defined in https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/azidentity#readme-environment-variables.
                    type: string
                required:
                - implicit
                type: object
              communityGalleryImageRules:
                description: |-
                  Rules for validating that images exist in an Azure Compute Gallery published as a community
                  gallery.
                items:
                  description: |-
                    CommunityGalleryImageRule verifies that one or more images in a community gallery exist and are
                    accessible by a particular subscription.
                  properties:
                    gallery:
                      description: Gallery is the community gallery.
                      properties:
                        location:
                          description: Location is the location of the community gallery
                            (e.g. "westus").
                          maxLength: 50
                          type: string
                        name:
                          description: Name is the name of the community gallery.
                          maxLength: 200
                          type: string
                      required:
                      - location
                      - name
                      type: object
                    images:
                      description: Images is a list of image names.
                      items:
                        type: string
                      maxItems: 1000
                      minItems: 1
                      type: array
                    name:
                      description: |-
                        Name is a unique identifier for the rule in the validator. Used to ensure conditions do not
                        overwrite each other.
                      maxLength: 200
                      type: string
                    subscriptionID:
                      description: SubscriptionID is the ID of the subscription.
                      type: string
                  required:
                  - gallery
                  - images
                  - name
                  - subscriptionID
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: CommunityGalleryImageRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
              rbacRoleRules:
                description: |-
                  RBACRoleRules validate that a security principal has permissions at a specified scope via
                  role assignments and role definitions.
                items:
                  description: |-
                    RBACRoleRule verifies that a role definition with a role type, role name, and set of permissions
                    exists, and that it is assigned at a scope to a security principal.
                  properties:
                    name:
                      description: |-
                        Name is a unique identifier for the rule in the validator. Used to ensure conditions do not
                        overwrite each other.
                      maxLength: 200
                      type: string
                    principalId:
                      description: |-
                        PrincipalID is the security principal being validated. This can be any type of principal -
                        Device, ForeignGroup, Group, ServicePrincipal, or User.
                      maxLength: 200
                      type: string
                    roleAssignments:
                      description: RoleAssignments are combinations of scope and role
                        data.
                      items:
                        description: RoleAssignment is a combination of scope and
                          role data.
                        properties:
                          role:
                            description: Role is the role data.
                            properties:
                              name:
                                description: Name is the role name property of the
                                  role definition.
                                maxLength: 200
                                type: string
                              permissions:
                                description: Permission is the permissions data of
                                  the role definition.
                                properties:
                                  actions:
                                    description: Actions is the "actions" of the role
                                      definition.
                                    items:
                                      description: |-
                                        ActionStr is a type used for Action strings and DataAction strings. Alias exists to enable
                                        kubebuilder max string length validation for arrays of these.
                                      maxLength: 200
                                      type: string
                                    type: array
                                  dataActions:
                                    description: DataActions is the "dataActions"
                                      of the role definition.
                                    items:
                                      description: |-
                                        ActionStr is a type used for Action strings and DataAction strings. Alias exists to enable
                                        kubebuilder max string length validation for arrays of these.
                                      maxLength: 200
                                      type: string
                                    type: array
                                  notActions:
                                    description: NotActions is the "notActions" of
                                      the role definition.
                                    items:
                                      description: |-
                                        ActionStr is a type used for Action strings and DataAction strings. Alias exists to enable
                                        kubebuilder max string length validation for arrays of these.
                                      maxLength: 200
                                      type: string
                                    type: array
                                  notDataActions:
                                    description: NotDataActions is the "notDataActions"
                                      of the role definition.
                                    items:
                                      description: |-
                                        ActionStr is a type used for Action strings and DataAction strings. Alias exists to enable
                                        kubebuilder max string length validation for arrays of these.
                                      maxLength: 200
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: |-
                                  Type is the role type property of the role definition. Must be "BuiltInRole" or "Custom".
                                  Required to disambiguate built in roles and custom roles with the same name.
                                enum:
                                - BuiltInRole
                                - CustomRole
                                type: string
                            required:
                            - name
                            - permissions
                            - type
                            type: object
                          scope:
                            description: Scope is the exact scope the role is assigned
                              to the security principal at.
                            maxLength: 200
                            type: string
                        required:
                        - role
                        - scope
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - name
                  - principalId
                  - roleAssignments
                  type: object
                maxItems: 5
                type: array
                x-kubernetes-validations:
                - message: RBACRoleRules must have unique names
                  rule: self.all(e, size(self.filter(x, x.name == e.name)) == 1)
            required:
            - auth
            type: object
          status:
            description: AzureValidatorStatus defines the observed state of AzureValidator
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
